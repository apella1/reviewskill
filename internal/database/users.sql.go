// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: users.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :one
INSERT INTO
    users (
        id,
        created_at,
        updated_at,
        first_name,
        last_name,
        email,
        password
    )
VALUES ($1,$2,$3,$4,$5,$6,$7)
RETURNING id, created_at, updated_at, first_name, last_name, email, password, profile_image
`

type CreateUserParams struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	FirstName string
	LastName  string
	Email     string
	Password  string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRowContext(ctx, createUser,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.FirstName,
		arg.LastName,
		arg.Email,
		arg.Password,
	)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.FirstName,
		&i.LastName,
		&i.Email,
		&i.Password,
		&i.ProfileImage,
	)
	return i, err
}

const getUserByEmail = `-- name: GetUserByEmail :one
SELECT id, created_at, updated_at, first_name, last_name, email, password, profile_image FROM users WHERE email = $1
`

func (q *Queries) GetUserByEmail(ctx context.Context, email string) (User, error) {
	row := q.db.QueryRowContext(ctx, getUserByEmail, email)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.FirstName,
		&i.LastName,
		&i.Email,
		&i.Password,
		&i.ProfileImage,
	)
	return i, err
}

const saveProfileImage = `-- name: SaveProfileImage :one
UPDATE users
SET profile_image = $1
WHERE id = $2
RETURNING id, created_at, updated_at, first_name, last_name, email, password, profile_image
`

type SaveProfileImageParams struct {
	ProfileImage []byte
	ID           uuid.UUID
}

func (q *Queries) SaveProfileImage(ctx context.Context, arg SaveProfileImageParams) (User, error) {
	row := q.db.QueryRowContext(ctx, saveProfileImage, arg.ProfileImage, arg.ID)
	var i User
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.FirstName,
		&i.LastName,
		&i.Email,
		&i.Password,
		&i.ProfileImage,
	)
	return i, err
}
